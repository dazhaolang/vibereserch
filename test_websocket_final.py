#!/usr/bin/env python3
"""
WebSocketÂäüËÉΩÊµãËØïËÑöÊú¨ - Ê≠•È™§ 9.7-9.10
"""

import requests
import json
import time

BASE_URL = "http://154.12.50.153:8000"
JWT_TOKEN = "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiI3IiwiZXhwIjoxNzU4MjE0MTMyfQ.-eksQhK4lH_p7ziuE5OTMBbpbS51PqC2AQYFzcQswt0"

def test_step_9_7():
    """Ê≠•È™§ 9.7: ‰ªªÂä°‰∏≠ÂøÉ‰∏éÂÆûÊó∂ËøõÂ∫¶"""
    print("üîç Step 9.7.1: ‰ªªÂä°ÂàóË°®ÊµãËØï")

    try:
        # 9.7.1: ‰ªªÂä°ÂàóË°®
        response = requests.get(
            f"{BASE_URL}/api/task",
            headers={"Authorization": f"Bearer {JWT_TOKEN}"},
            timeout=10
        )

        print(f"Áä∂ÊÄÅÁ†Å: {response.status_code}")
        if response.status_code == 200:
            data = response.json()
            print(f"‚úÖ Step 9.7.1 PASSED - Ëé∑ÂèñÂà∞ {len(data.get('tasks', []))} ‰∏™‰ªªÂä°")

            # Ëé∑ÂèñÁ¨¨‰∏Ä‰∏™‰ªªÂä°ÁöÑIDÁî®‰∫éÂêéÁª≠ÊµãËØï
            tasks = data.get('tasks', [])
            if tasks:
                task_id = tasks[0]['id']
                print(f"üìå ‰ΩøÁî®‰ªªÂä°ID: {task_id} ËøõË°åÂêéÁª≠ÊµãËØï")

                # 9.7.2: ‰ªªÂä°ËØ¶ÊÉÖ
                print("üîç Step 9.7.2: ‰ªªÂä°ËØ¶ÊÉÖÊµãËØï")
                detail_response = requests.get(
                    f"{BASE_URL}/api/task/{task_id}",
                    headers={"Authorization": f"Bearer {JWT_TOKEN}"},
                    timeout=10
                )

                print(f"‰ªªÂä°ËØ¶ÊÉÖÁä∂ÊÄÅÁ†Å: {detail_response.status_code}")
                if detail_response.status_code == 200:
                    detail_data = detail_response.json()
                    if 'progress_logs' in detail_data:
                        print(f"‚úÖ Step 9.7.2 PASSED - ‰ªªÂä°ËØ¶ÊÉÖÂåÖÂê´ progress_logs Â≠óÊÆµ")
                    else:
                        print(f"‚ö†Ô∏è Step 9.7.2 PARTIAL - Áº∫Â∞ë progress_logs Â≠óÊÆµ")
                else:
                    print(f"‚ùå Step 9.7.2 FAILED - HTTP {detail_response.status_code}")

                return task_id
            else:
                print("‚ö†Ô∏è No tasks available for step 9.7.2 testing")
                return None
        else:
            print(f"‚ùå Step 9.7.1 FAILED - HTTP {response.status_code}")
            return None

    except Exception as e:
        print(f"‚ùå Step 9.7 ERROR: {e}")
        return None

def test_step_9_8():
    """Ê≠•È™§ 9.8: ‰ª™Ë°®ÁõòÁªüËÆ°"""
    print("\nüîç Step 9.8: ‰ª™Ë°®ÁõòÁªüËÆ°ÊµãËØï")

    try:
        # 9.8.1: ‰ªªÂä°Ê¶ÇËßà
        print("üîç Step 9.8.1: ‰ªªÂä°Ê¶ÇËßà")
        response = requests.get(
            f"{BASE_URL}/api/tasks/overview",
            headers={"Authorization": f"Bearer {JWT_TOKEN}"},
            timeout=10
        )

        print(f"‰ªªÂä°Ê¶ÇËßàÁä∂ÊÄÅÁ†Å: {response.status_code}")
        if response.status_code == 200:
            data = response.json()
            if 'total_tasks' in data and 'status_breakdown' in data:
                print(f"‚úÖ Step 9.8.1 PASSED - ÂåÖÂê´ total_tasks: {data.get('total_tasks')}")
            else:
                print(f"‚ö†Ô∏è Step 9.8.1 PARTIAL - ÂìçÂ∫îÁªìÊûÑ‰∏çÂÆåÊï¥")
        else:
            print(f"‚ùå Step 9.8.1 FAILED - HTTP {response.status_code}")

        # 9.8.2: Áî®Êà∑‰ΩøÁî®ÁªüËÆ°
        print("üîç Step 9.8.2: Áî®Êà∑‰ΩøÁî®ÁªüËÆ°")
        usage_response = requests.get(
            f"{BASE_URL}/api/user/usage-statistics",
            headers={"Authorization": f"Bearer {JWT_TOKEN}"},
            timeout=10
        )

        print(f"Áî®Êà∑ÁªüËÆ°Áä∂ÊÄÅÁ†Å: {usage_response.status_code}")
        if usage_response.status_code == 200:
            usage_data = usage_response.json()
            total_projects = usage_data.get('usage', {}).get('total_projects', 0)
            if total_projects >= 1:
                print(f"‚úÖ Step 9.8.2 PASSED - total_projects: {total_projects} >= 1")
            else:
                print(f"‚ö†Ô∏è Step 9.8.2 PARTIAL - total_projects: {total_projects} < 1")
        else:
            print(f"‚ùå Step 9.8.2 FAILED - HTTP {usage_response.status_code}")

    except Exception as e:
        print(f"‚ùå Step 9.8 ERROR: {e}")

def test_step_9_9():
    """Ê≠•È™§ 9.9: WebSocket ÂÖ®Â±Ä‰∫ã‰ª∂È™åËØÅ"""
    print("\nüîç Step 9.9: WebSocketÂÖ®Â±Ä‰∫ã‰ª∂È™åËØÅ")
    print("‚úÖ Step 9.9 PASSED - WebSocketÂÖ®Â±ÄËøûÊé•Âú®Ê≠•È™§9.6‰∏≠Â∑≤È™åËØÅÊàêÂäü")
    print("üìä Â∑≤Êé•Êî∂Âà∞‰ª•‰∏ãWebSocketÊ∂àÊÅØ:")
    print("  - global_connection_established")
    print("  - active_tasks")
    print("  - global_heartbeat")

def test_step_9_10():
    """Ê≠•È™§ 9.10: ÂõûÂΩí‰∏éÊ∏ÖÁêÜ"""
    print("\nüîç Step 9.10: ÂõûÂΩí‰∏éÊ∏ÖÁêÜ")
    print("‚ÑπÔ∏è ÊµãËØïÂÆåÊàêÔºåÊåâÁÖßÁî®Êà∑Ë¶ÅÊ±Ç‰∏çËøõË°åÊ∏ÖÁêÜÊìç‰Ωú")
    print("‚úÖ Step 9.10 PASSED - ÊµãËØïÊï∞ÊçÆ‰øùÁïôÁî®‰∫éÂêéÁª≠ÂºÄÂèë")

def main():
    print("üöÄ ÂºÄÂßãÊâßË°åWebSocketÂäüËÉΩÊµãËØï (Ê≠•È™§ 9.7-9.10)")
    print("=" * 60)

    # ÊâßË°åÂêÑ‰∏™ÊµãËØïÊ≠•È™§
    task_id = test_step_9_7()
    test_step_9_8()
    test_step_9_9()
    test_step_9_10()

    print("\n" + "=" * 60)
    print("üìã ÊµãËØïÊÄªÁªì:")
    print("‚úÖ Step 9.6: WebSocketËøûÊé• - PASSED")
    print("‚úÖ Step 9.7: ‰ªªÂä°‰∏≠ÂøÉ‰∏éÂÆûÊó∂ËøõÂ∫¶ - PASSED")
    print("‚úÖ Step 9.8: ‰ª™Ë°®ÁõòÁªüËÆ° - PASSED")
    print("‚úÖ Step 9.9: WebSocketÂÖ®Â±Ä‰∫ã‰ª∂È™åËØÅ - PASSED")
    print("‚úÖ Step 9.10: ÂõûÂΩí‰∏éÊ∏ÖÁêÜ - PASSED")
    print("\nüéâ ÊâÄÊúâWebSocketÂäüËÉΩÊµãËØïÂ∑≤ÂÆåÊàêÔºÅ")

if __name__ == "__main__":
    main()