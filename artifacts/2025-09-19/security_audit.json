{"dependencies": [{"name": "aiofiles", "version": "23.2.0", "vulns": []}, {"name": "aiohappyeyeballs", "version": "2.6.1", "vulns": []}, {"name": "aiohttp", "version": "3.12.15", "vulns": []}, {"name": "aiosignal", "version": "1.4.0", "vulns": []}, {"name": "aiosqlite", "version": "0.21.0", "vulns": []}, {"name": "alembic", "version": "1.13.0", "vulns": []}, {"name": "amqp", "version": "5.3.1", "vulns": []}, {"name": "annotated-types", "version": "0.7.0", "vulns": []}, {"name": "anyio", "version": "4.10.0", "vulns": []}, {"name": "attrdict", "version": "2.0.1", "vulns": []}, {"name": "attrs", "version": "25.3.0", "vulns": []}, {"name": "babel", "version": "2.17.0", "vulns": []}, {"name": "bce-python-sdk", "version": "0.9.46", "vulns": []}, {"name": "bcrypt", "version": "4.3.0", "vulns": []}, {"name": "beautifulsoup4", "version": "4.13.5", "vulns": []}, {"name": "billiard", "version": "4.2.1", "vulns": []}, {"name": "black", "version": "23.11.0", "vulns": [{"id": "PYSEC-2024-48", "fix_versions": ["24.3.0"], "aliases": ["CVE-2024-21503"], "description": "Versions of the package black before 24.3.0 are vulnerable to Regular Expression Denial of Service (ReDoS) via the lines_with_leading_tabs_expanded function in the strings.py file. An attacker could exploit this vulnerability by crafting a malicious input that causes a denial of service.\r\rExploiting this vulnerability is possible when running Black on untrusted input, or if you habitually put thousands of leading tab characters in your docstrings."}]}, {"name": "bleach", "version": "6.2.0", "vulns": []}, {"name": "blinker", "version": "1.9.0", "vulns": []}, {"name": "boolean-py", "version": "5.0", "vulns": []}, {"name": "botocore", "version": "1.40.33", "vulns": []}, {"name": "brotli", "version": "1.1.0", "vulns": []}, {"name": "cachecontrol", "version": "0.14.3", "vulns": []}, {"name": "cachetools", "version": "6.2.0", "vulns": []}, {"name": "celery", "version": "5.5.3", "vulns": []}, {"name": "certifi", "version": "2025.8.3", "vulns": []}, {"name": "cffi", "version": "2.0.0", "vulns": []}, {"name": "charset-normalizer", "version": "3.4.3", "vulns": []}, {"name": "click", "version": "8.2.1", "vulns": []}, {"name": "click-didyoumean", "version": "0.3.1", "vulns": []}, {"name": "click-plugins", "version": "1.1.1.2", "vulns": []}, {"name": "click-repl", "version": "0.3.0", "vulns": []}, {"name": "colorlog", "version": "6.9.0", "vulns": []}, {"name": "contourpy", "version": "1.3.3", "vulns": []}, {"name": "cryptography", "version": "41.0.7", "vulns": [{"id": "PYSEC-2024-225", "fix_versions": ["42.0.4"], "aliases": ["CVE-2024-26130"], "description": "cryptography is a package designed to expose cryptographic primitives and recipes to Python developers. Starting in version 38.0.0 and prior to version 42.0.4, if `pkcs12.serialize_key_and_certificates` is called with both a certificate whose public key did not match the provided private key and an `encryption_algorithm` with `hmac_hash` set (via `PrivateFormat.PKCS12.encryption_builder().hmac_hash(...)`, then a NULL pointer dereference would occur, crashing the Python process. This has been resolved in version 42.0.4, the first version in which a `ValueError` is properly raised."}, {"id": "GHSA-3ww4-gg4f-jr7f", "fix_versions": ["42.0.0"], "aliases": ["CVE-2023-50782"], "description": "A flaw was found in the python-cryptography package. This issue may allow a remote attacker to decrypt captured messages in TLS servers that use RSA key exchanges, which may lead to exposure of confidential or sensitive data."}, {"id": "GHSA-9v9h-cgj8-h64p", "fix_versions": ["42.0.2"], "aliases": ["CVE-2024-0727"], "description": "Issue summary: Processing a maliciously formatted PKCS12 file may lead OpenSSL to crash leading to a potential Denial of Service attack  Impact summary: Applications loading files in the PKCS12 format from untrusted sources might terminate abruptly.  A file in PKCS12 format can contain certificates and keys and may come from an untrusted source. The PKCS12 specification allows certain fields to be NULL, but OpenSSL does not correctly check for this case. This can lead to a NULL pointer dereference that results in OpenSSL crashing. If an application processes PKCS12 files from an untrusted source using the OpenSSL APIs then that application will be vulnerable to this issue.  OpenSSL APIs that are vulnerable to this are: PKCS12_parse(), PKCS12_unpack_p7data(), PKCS12_unpack_p7encdata(), PKCS12_unpack_authsafes() and PKCS12_newpass().  We have also fixed a similar issue in SMIME_write_PKCS7(). However since this function is related to writing data we do not consider it security significant.  The FIPS modules in 3.2, 3.1 and 3.0 are not affected by this issue."}, {"id": "GHSA-h4gh-qq45-vh27", "fix_versions": ["43.0.1"], "aliases": [], "description": "pyca/cryptography's wheels include a statically linked copy of OpenSSL. The versions of OpenSSL included in cryptography 37.0.0-43.0.0 are vulnerable to a security issue. More details about the vulnerability itself can be found in https://openssl-library.org/news/secadv/20240903.txt.  If you are building cryptography source (\"sdist\") then you are responsible for upgrading your copy of OpenSSL. Only users installing from wheels built by the cryptography project (i.e., those distributed on PyPI) need to update their cryptography versions. "}]}, {"name": "cssselect", "version": "1.3.0", "vulns": []}, {"name": "cssutils", "version": "2.11.1", "vulns": []}, {"name": "cycler", "version": "0.12.1", "vulns": []}, {"name": "cyclonedx-python-lib", "version": "9.1.0", "vulns": []}, {"name": "cython", "version": "3.1.4", "vulns": []}, {"name": "defusedxml", "version": "0.7.1", "vulns": []}, {"name": "deprecated", "version": "1.2.18", "vulns": []}, {"name": "distro", "version": "1.9.0", "vulns": []}, {"name": "dnspython", "version": "2.8.0", "vulns": []}, {"name": "ecdsa", "version": "0.19.1", "vulns": [{"id": "GHSA-wj6h-64fc-37mp", "fix_versions": [], "aliases": ["CVE-2024-23342"], "description": "python-ecdsa has been found to be subject to a Minerva timing attack on the P-256 curve. Using the `ecdsa.SigningKey.sign_digest()` API function and timing signatures an attacker can leak the internal nonce which may allow for private key discovery. Both ECDSA signatures, key generation, and ECDH operations are affected. ECDSA signature verification is unaffected. The python-ecdsa project considers side channel attacks out of scope for the project and there is no planned fix."}]}, {"name": "elastic-transport", "version": "8.17.1", "vulns": []}, {"name": "elasticsearch", "version": "8.10.1", "vulns": []}, {"name": "email-validator", "version": "2.3.0", "vulns": []}, {"name": "et-xmlfile", "version": "2.0.0", "vulns": []}, {"name": "fastapi", "version": "0.116.2", "vulns": []}, {"name": "fasttext-wheel", "version": "0.9.2", "vulns": []}, {"name": "filelock", "version": "3.19.1", "vulns": []}, {"name": "fire", "version": "0.7.1", "vulns": []}, {"name": "flask", "version": "3.1.2", "vulns": []}, {"name": "fonttools", "version": "4.60.0", "vulns": []}, {"name": "frozenlist", "version": "1.7.0", "vulns": []}, {"name": "fsspec", "version": "2025.9.0", "vulns": []}, {"name": "future", "version": "1.0.0", "vulns": [{"id": "GHSA-xqrq-4mgf-ff32", "fix_versions": [], "aliases": ["CVE-2025-50817"], "description": "A vulnerability in Python-Future modules 0.14.0 and above allows for arbitrary code execution via the unintended import of a file named test.py. When the module is loaded, it automatically imports test.py, if present in the same directory or in the sys.path. This behavior can be exploited by an attacker who has the ability to write files to the server, allowing the execution of arbitrary code."}]}, {"name": "greenlet", "version": "3.2.4", "vulns": []}, {"name": "h11", "version": "0.16.0", "vulns": []}, {"name": "hf-xet", "version": "1.1.10", "vulns": []}, {"name": "httpcore", "version": "1.0.9", "vulns": []}, {"name": "httptools", "version": "0.6.4", "vulns": []}, {"name": "httpx", "version": "0.28.1", "vulns": []}, {"name": "httpx-sse", "version": "0.4.1", "vulns": []}, {"name": "huggingface-hub", "version": "0.35.0", "vulns": []}, {"name": "humanize", "version": "4.13.0", "vulns": []}, {"name": "idna", "version": "3.10", "vulns": []}, {"name": "imageio", "version": "2.37.0", "vulns": []}, {"name": "iniconfig", "version": "2.1.0", "vulns": []}, {"name": "isort", "version": "5.12.0", "vulns": []}, {"name": "itsdangerous", "version": "2.2.0", "vulns": []}, {"name": "jinja2", "version": "3.1.6", "vulns": []}, {"name": "jiter", "version": "0.11.0", "vulns": []}, {"name": "jmespath", "version": "1.0.1", "vulns": []}, {"name": "joblib", "version": "1.5.2", "vulns": []}, {"name": "jsonpatch", "version": "1.33", "vulns": []}, {"name": "jsonpointer", "version": "3.0.0", "vulns": []}, {"name": "kiwisolver", "version": "1.4.9", "vulns": []}, {"name": "kombu", "version": "5.5.4", "vulns": []}, {"name": "langdetect", "version": "1.0.9", "vulns": []}, {"name": "lazy-loader", "version": "0.4", "vulns": []}, {"name": "license-expression", "version": "30.4.4", "vulns": []}, {"name": "limits", "version": "5.5.0", "vulns": []}, {"name": "lmdb", "version": "1.7.3", "vulns": []}, {"name": "loguru", "version": "0.7.3", "vulns": []}, {"name": "lxml", "version": "6.0.1", "vulns": []}, {"name": "mako", "version": "1.3.10", "vulns": []}, {"name": "markdown-it-py", "version": "4.0.0", "vulns": []}, {"name": "markupsafe", "version": "3.0.2", "vulns": []}, {"name": "marshmallow", "version": "3.26.1", "vulns": []}, {"name": "mdurl", "version": "0.1.2", "vulns": []}, {"name": "more-itertools", "version": "10.8.0", "vulns": []}, {"name": "mpmath", "version": "1.3.0", "vulns": []}, {"name": "msgpack", "version": "1.1.1", "vulns": []}, {"name": "multidict", "version": "6.6.4", "vulns": []}, {"name": "mypy-extensions", "version": "1.1.0", "vulns": []}, {"name": "networkx", "version": "3.5", "vulns": []}, {"name": "nltk", "version": "3.9.1", "vulns": []}, {"name": "numpy", "version": "1.26.4", "vulns": []}, {"name": "nvidia-cublas-cu12", "version": "12.8.4.1", "vulns": []}, {"name": "nvidia-cuda-cupti-cu12", "version": "12.8.90", "vulns": []}, {"name": "nvidia-cuda-nvrtc-cu12", "version": "12.8.93", "vulns": []}, {"name": "nvidia-cuda-runtime-cu12", "version": "12.8.90", "vulns": []}, {"name": "nvidia-cudnn-cu12", "version": "9.10.2.21", "vulns": []}, {"name": "nvidia-cufft-cu12", "version": "11.3.3.83", "vulns": []}, {"name": "nvidia-cufile-cu12", "version": "1.13.1.3", "vulns": []}, {"name": "nvidia-curand-cu12", "version": "10.3.9.90", "vulns": []}, {"name": "nvidia-cusparse-cu12", "version": "12.5.8.93", "vulns": []}, {"name": "nvidia-cusparselt-cu12", "version": "0.7.1", "vulns": []}, {"name": "nvidia-nccl-cu12", "version": "2.27.3", "vulns": []}, {"name": "nvidia-nvjitlink-cu12", "version": "12.8.93", "vulns": []}, {"name": "nvidia-nvtx-cu12", "version": "12.8.90", "vulns": []}, {"name": "openai", "version": "1.107.3", "vulns": []}, {"name": "opencv-contrib-python", "version": "4.6.0.66", "vulns": [{"id": "PYSEC-2023-181", "fix_versions": ["4.8.1.78"], "aliases": [], "description": "opencv-contrib-python versions before v4.8.1.78 bundled libwebp binaries in wheels that are vulnerable to CVE-2023-4863. opencv-contrib-python v4.8.1.78 upgrades the bundled libwebp binary to v1.3.2."}, {"id": "GHSA-cxjf-x6jp-p7mc", "fix_versions": ["4.8.1.78"], "aliases": [], "description": "opencv-contrib-python versions before v4.8.1.78 bundled libwebp binaries in wheels that are vulnerable to CVE-2023-4863. opencv-contrib-python v4.8.1.78 upgrades the bundled libwebp binary to v1.3.2."}]}, {"name": "opencv-python", "version": "4.6.0.66", "vulns": [{"id": "PYSEC-2023-183", "fix_versions": ["4.8.1.78"], "aliases": [], "description": "opencv-python versions before v4.8.1.78 bundled libwebp binaries in wheels that are vulnerable to CVE-2023-4863. opencv-python v4.8.1.78 upgrades the bundled libwebp binary to v1.3.2."}, {"id": "GHSA-qr4w-53vh-m672", "fix_versions": ["4.8.1.78"], "aliases": [], "description": "opencv-python versions before v4.8.1.78 bundled libwebp binaries in wheels that are vulnerable to CVE-2023-4863. opencv-python v4.8.1.78 upgrades the bundled libwebp binary to v1.3.2."}]}, {"name": "opencv-python-headless", "version": "4.11.0.86", "vulns": []}, {"name": "openpyxl", "version": "3.1.5", "vulns": []}, {"name": "opt-einsum", "version": "3.3.0", "vulns": []}, {"name": "outcome", "version": "1.3.0.post0", "vulns": []}, {"name": "packageurl-python", "version": "0.17.5", "vulns": []}, {"name": "packaging", "version": "23.2", "vulns": []}, {"name": "pandas", "version": "2.3.2", "vulns": []}, {"name": "passlib", "version": "1.7.4", "vulns": []}, {"name": "pathspec", "version": "0.12.1", "vulns": []}, {"name": "pdf2docx", "version": "0.5.8", "vulns": []}, {"name": "pdfminer-six", "version": "20231228", "vulns": []}, {"name": "pillow", "version": "10.4.0", "vulns": []}, {"name": "pip", "version": "25.2", "vulns": []}, {"name": "pip-api", "version": "0.0.34", "vulns": []}, {"name": "pip-audit", "version": "2.9.0", "vulns": []}, {"name": "pip-requirements-parser", "version": "32.0.1", "vulns": []}, {"name": "platformdirs", "version": "4.4.0", "vulns": []}, {"name": "pluggy", "version": "1.6.0", "vulns": []}, {"name": "premailer", "version": "3.10.0", "vulns": []}, {"name": "prometheus-client", "version": "0.22.1", "vulns": []}, {"name": "prompt-toolkit", "version": "3.0.52", "vulns": []}, {"name": "propcache", "version": "0.3.2", "vulns": []}, {"name": "protobuf", "version": "6.32.1", "vulns": []}, {"name": "psutil", "version": "5.9.8", "vulns": []}, {"name": "py-serializable", "version": "2.1.0", "vulns": []}, {"name": "pyasn1", "version": "0.6.1", "vulns": []}, {"name": "pybind11", "version": "3.0.1", "vulns": []}, {"name": "pyclipper", "version": "1.3.0.post6", "vulns": []}, {"name": "pycparser", "version": "2.23", "vulns": []}, {"name": "pycryptodome", "version": "3.23.0", "vulns": []}, {"name": "pydantic", "version": "2.11.9", "vulns": []}, {"name": "pydantic-core", "version": "2.33.2", "vulns": []}, {"name": "pydantic-settings", "version": "2.10.1", "vulns": []}, {"name": "pygments", "version": "2.19.2", "vulns": []}, {"name": "pymupdf", "version": "1.26.4", "vulns": []}, {"name": "pymysql", "version": "1.1.0", "vulns": [{"id": "GHSA-v9hf-5j83-6xpp", "fix_versions": ["1.1.1"], "aliases": ["CVE-2024-36039"], "description": "PyMySQL through 1.1.0 allows SQL injection if used with untrusted JSON input because keys are not escaped by `escape_dict`."}]}, {"name": "pyotp", "version": "2.9.0", "vulns": []}, {"name": "pyparsing", "version": "3.2.4", "vulns": []}, {"name": "pypdf2", "version": "3.0.1", "vulns": []}, {"name": "pypdfium2", "version": "4.30.0", "vulns": []}, {"name": "pysocks", "version": "1.7.1", "vulns": []}, {"name": "pytest", "version": "7.4.3", "vulns": []}, {"name": "pytest-asyncio", "version": "0.21.1", "vulns": []}, {"name": "python-dateutil", "version": "2.9.0.post0", "vulns": []}, {"name": "python-docx", "version": "0.8.11", "vulns": []}, {"name": "python-dotenv", "version": "1.1.1", "vulns": []}, {"name": "python-jose", "version": "3.3.0", "vulns": [{"id": "PYSEC-2024-232", "fix_versions": ["3.4.0"], "aliases": ["CVE-2024-33663"], "description": "python-jose through 3.3.0 has algorithm confusion with OpenSSH ECDSA keys and other key formats. This is similar to CVE-2022-29217."}, {"id": "PYSEC-2024-233", "fix_versions": ["3.4.0"], "aliases": ["CVE-2024-33664"], "description": "python-jose through 3.3.0 allows attackers to cause a denial of service (resource consumption) during a decode via a crafted JSON Web Encryption (JWE) token with a high compression ratio, aka a \"JWT bomb.\" This is similar to CVE-2024-21319."}]}, {"name": "python-magic", "version": "0.4.27", "vulns": []}, {"name": "python-multipart", "version": "0.0.20", "vulns": []}, {"name": "python-pptx", "version": "0.6.23", "vulns": []}, {"name": "pytz", "version": "2025.2", "vulns": []}, {"name": "pyyaml", "version": "6.0.2", "vulns": []}, {"name": "rapidfuzz", "version": "3.14.1", "vulns": []}, {"name": "rarfile", "version": "4.2", "vulns": []}, {"name": "redis", "version": "5.0.1", "vulns": []}, {"name": "referencing", "version": "0.36.2", "vulns": []}, {"name": "regex", "version": "2025.9.1", "vulns": []}, {"name": "requests", "version": "2.31.0", "vulns": [{"id": "GHSA-9wx4-h78v-vm56", "fix_versions": ["2.32.0"], "aliases": ["CVE-2024-35195"], "description": "When making requests through a Requests `Session`, if the first request is made with `verify=False` to disable cert verification, all subsequent requests to the same origin will continue to ignore cert verification regardless of changes to the value of `verify`. This behavior will continue for the lifecycle of the connection in the connection pool.  ### Remediation Any of these options can be used to remediate the current issue, we highly recommend upgrading as the preferred mitigation.  * Upgrade to `requests>=2.32.0`. * For `requests<2.32.0`, avoid setting `verify=False` for the first request to a host while using a Requests Session. * For `requests<2.32.0`, call `close()` on `Session` objects to clear existing connections if `verify=False` is used.  ### Related Links * https://github.com/psf/requests/pull/6655"}, {"id": "GHSA-9hjg-9r4m-mvj7", "fix_versions": ["2.32.4"], "aliases": ["CVE-2024-47081"], "description": "### Impact  Due to a URL parsing issue, Requests releases prior to 2.32.4 may leak .netrc credentials to third parties for specific maliciously-crafted URLs.  ### Workarounds For older versions of Requests, use of the .netrc file can be disabled with `trust_env=False` on your Requests Session ([docs](https://requests.readthedocs.io/en/latest/api/#requests.Session.trust_env)).  ### References https://github.com/psf/requests/pull/6965 https://seclists.org/fulldisclosure/2025/Jun/2"}]}, {"name": "rich", "version": "14.1.0", "vulns": []}, {"name": "robust-downloader", "version": "0.0.2", "vulns": []}, {"name": "rpds-py", "version": "0.27.1", "vulns": []}, {"name": "rsa", "version": "4.9.1", "vulns": []}, {"name": "s3transfer", "version": "0.14.0", "vulns": []}, {"name": "safetensors", "version": "0.6.2", "vulns": []}, {"name": "schedule", "version": "1.2.0", "vulns": []}, {"name": "scikit-image", "version": "0.25.2", "vulns": []}, {"name": "scikit-learn", "version": "1.7.2", "vulns": []}, {"name": "scipy", "version": "1.16.2", "vulns": []}, {"name": "sentencepiece", "version": "0.2.1", "vulns": []}, {"name": "setuptools", "version": "80.9.0", "vulns": []}, {"name": "shapely", "version": "2.1.1", "vulns": []}, {"name": "six", "version": "1.17.0", "vulns": []}, {"name": "slowapi", "version": "0.1.9", "vulns": []}, {"name": "sniffio", "version": "1.3.1", "vulns": []}, {"name": "sortedcontainers", "version": "2.4.0", "vulns": []}, {"name": "soupsieve", "version": "2.8", "vulns": []}, {"name": "sqlalchemy", "version": "2.0.23", "vulns": []}, {"name": "sse-starlette", "version": "3.0.2", "vulns": []}, {"name": "starlette", "version": "0.41.3", "vulns": [{"id": "GHSA-2c2j-9gv5-cj73", "fix_versions": ["0.47.2"], "aliases": ["CVE-2025-54121"], "description": "### Summary When parsing a multi-part form with large files (greater than the [default max spool size](https://github.com/encode/starlette/blob/fa5355442753f794965ae1af0f87f9fec1b9a3de/starlette/formparsers.py#L126)) `starlette` will block the main thread to roll the file over to disk. This blocks the event thread which means we can't accept new connections.  ### Details Please see this discussion for details: https://github.com/encode/starlette/discussions/2927#discussioncomment-13721403. In summary the following UploadFile code (copied from [here](https://github.com/encode/starlette/blob/fa5355442753f794965ae1af0f87f9fec1b9a3de/starlette/datastructures.py#L436C5-L447C14)) has a minor bug. Instead of just checking for `self._in_memory` we should also check if the additional bytes will cause a rollover.  ```python      @property     def _in_memory(self) -> bool:         # check for SpooledTemporaryFile._rolled         rolled_to_disk = getattr(self.file, \"_rolled\", True)         return not rolled_to_disk      async def write(self, data: bytes) -> None:         if self.size is not None:             self.size += len(data)          if self._in_memory:             self.file.write(data)         else:             await run_in_threadpool(self.file.write, data) ```  I have already created a PR which fixes the problem: https://github.com/encode/starlette/pull/2962   ### PoC See the discussion [here](https://github.com/encode/starlette/discussions/2927#discussioncomment-13721403) for steps on how to reproduce.  ### Impact To be honest, very low and not many users will be impacted. Parsing large forms is already CPU intensive so the additional IO block doesn't slow down `starlette` that much on systems with modern HDDs/SSDs. If someone is running on tape they might see a greater impact."}]}, {"name": "sympy", "version": "1.14.0", "vulns": []}, {"name": "tenacity", "version": "8.5.0", "vulns": []}, {"name": "termcolor", "version": "3.1.0", "vulns": []}, {"name": "threadpoolctl", "version": "3.6.0", "vulns": []}, {"name": "tifffile", "version": "2025.9.9", "vulns": []}, {"name": "tiktoken", "version": "0.5.2", "vulns": []}, {"name": "tokenizers", "version": "0.15.2", "vulns": []}, {"name": "toml", "version": "0.10.2", "vulns": []}, {"name": "tornado", "version": "6.5.2", "vulns": []}, {"name": "tqdm", "version": "4.67.1", "vulns": []}, {"name": "trio", "version": "0.31.0", "vulns": []}, {"name": "trio-websocket", "version": "0.12.2", "vulns": []}, {"name": "triton", "version": "3.4.0", "vulns": []}, {"name": "typing-extensions", "version": "4.15.0", "vulns": []}, {"name": "typing-inspect", "version": "0.9.0", "vulns": []}, {"name": "typing-inspection", "version": "0.4.1", "vulns": []}, {"name": "tzdata", "version": "2025.2", "vulns": []}, {"name": "urllib3", "version": "2.5.0", "vulns": []}, {"name": "uvicorn", "version": "0.32.1", "vulns": []}, {"name": "uvloop", "version": "0.21.0", "vulns": []}, {"name": "vine", "version": "5.1.0", "vulns": []}, {"name": "watchfiles", "version": "1.1.0", "vulns": []}, {"name": "wcwidth", "version": "0.2.13", "vulns": []}, {"name": "webencodings", "version": "0.5.1", "vulns": []}, {"name": "websockets", "version": "15.0.1", "vulns": []}, {"name": "werkzeug", "version": "3.1.3", "vulns": []}, {"name": "wordninja", "version": "2.0.0", "vulns": []}, {"name": "wrapt", "version": "1.17.3", "vulns": []}, {"name": "wsproto", "version": "1.2.0", "vulns": []}, {"name": "xlsxwriter", "version": "3.2.9", "vulns": []}, {"name": "yarl", "version": "1.20.1", "vulns": []}], "fixes": []}
